name: Actions ðŸ˜Ž

on:
  workflow_dispatch:

jobs:
  build0:
    name: prepare project âœ¨
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
          
      - name: Create Git tag
        id: tag
        run: |
          TAG_NAME=$(date +'%Y-%m-%d_%H-%M-%S')
          git tag $TAG_NAME
          git push origin $TAG_NAME
          echo "::set-output name=tag::$TAG_NAME"
          
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: Release ${{ steps.tag.outputs.tag }}
          body: Automatycznie utworzony release z plikiem build.zip
          draft: false
          prerelease: false
          
  build1:
    name: Build my linux project âœ¨
    needs: build0
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Build
      - name: Build project
        run: bash create_files.sh
        
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux.zip
          asset_name: linux.zip
          asset_content_type: application/zip
          
  build2:
    name: Build my windows project âœ¨
    needs: build0
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Build
      - name: Build project
        run: bash c2.sh
        
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows.zip
          asset_name: windows.zip
          asset_content_type: application/zip
